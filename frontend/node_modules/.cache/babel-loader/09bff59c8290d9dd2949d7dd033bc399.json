{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TEQ\\\\Desktop\\\\fullstack-dotnet-react\\\\frontend\\\\src\\\\components\\\\TodoApp.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport DataForm from './DataForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoApp = () => {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const {\n    sendRequest\n  } = useHttp();\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n  const fetchTodos = async () => {\n    try {\n      const response = await sendRequest('https://localhost:5001/todo/', 'GET');\n      setTodos(response.data);\n    } catch (error) {\n      console.error('Error fetching todos:', error);\n    }\n  };\n  const createTodo = async newTodoData => {\n    try {\n      const response = await sendRequest('https://localhost:5001/todo/', 'POST', newTodoData, {\n        'Content-Type': 'application/json'\n      });\n      if (response.ok) {\n        fetchTodos(); // Refresh the list of todos after creating a new todo\n      } else {\n        // Handle error response, show error message\n      }\n    } catch (error) {\n      // Handle general error, show error message\n    }\n  };\n  const updateTodo = async (id, updatedData) => {\n    try {\n      await axios.put(`https://localhost:5001/todo/${id}`, updatedData);\n      fetchTodos();\n    } catch (error) {\n      console.error('Error updating todo:', error);\n    }\n  };\n  const deleteTodo = async id => {\n    try {\n      await axios.delete(`https://localhost:5001/todo/${id}`);\n      fetchTodos();\n    } catch (error) {\n      console.error('Error deleting todo:', error);\n    }\n  };\n\n  // Other CRUD functions like updateTodo and deleteTodo\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Todo App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataForm, {\n      createTodo: createTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: todos.map(todo => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: todo.Description\n      }, todo.Id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoApp, \"T0wokLp5EwphE0m0QA9Y0l9rJD8=\", true);\n_c = TodoApp;\nexport default TodoApp;\nvar _c;\n$RefreshReg$(_c, \"TodoApp\");","map":{"version":3,"names":["React","useState","useEffect","axios","DataForm","jsxDEV","_jsxDEV","TodoApp","_s","todos","setTodos","sendRequest","useHttp","fetchTodos","response","data","error","console","createTodo","newTodoData","ok","updateTodo","id","updatedData","put","deleteTodo","delete","children","fileName","_jsxFileName","lineNumber","columnNumber","map","todo","Description","Id","_c","$RefreshReg$"],"sources":["C:/Users/TEQ/Desktop/fullstack-dotnet-react/frontend/src/components/TodoApp.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport DataForm from './DataForm';\r\n\r\nconst TodoApp = () => {\r\n  const [todos, setTodos] = useState([]);\r\n  const { sendRequest } = useHttp();\r\n\r\n  useEffect(() => {\r\n    fetchTodos();\r\n  }, []);\r\n\r\n  const fetchTodos = async () => {\r\n    try {\r\n      const response = await sendRequest('https://localhost:5001/todo/', 'GET');\r\n      setTodos(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching todos:', error);\r\n    }\r\n  };\r\n\r\n  const createTodo = async (newTodoData) => {\r\n    try {\r\n      const response = await sendRequest('https://localhost:5001/todo/', 'POST', newTodoData, {\r\n        'Content-Type': 'application/json',\r\n      });\r\n\r\n      if (response.ok) {\r\n        fetchTodos(); // Refresh the list of todos after creating a new todo\r\n      } else {\r\n        // Handle error response, show error message\r\n      }\r\n    } catch (error) {\r\n      // Handle general error, show error message\r\n    }\r\n  };\r\n  const updateTodo = async (id, updatedData) => {\r\n    try {\r\n      await axios.put(`https://localhost:5001/todo/${id}`, updatedData);\r\n      fetchTodos();\r\n    } catch (error) {\r\n      console.error('Error updating todo:', error);\r\n    }\r\n  };\r\n\r\n  const deleteTodo = async (id) => {\r\n    try {\r\n      await axios.delete(`https://localhost:5001/todo/${id}`);\r\n      fetchTodos();\r\n    } catch (error) {\r\n      console.error('Error deleting todo:', error);\r\n    }\r\n  };\r\n\r\n  // Other CRUD functions like updateTodo and deleteTodo\r\n\r\n  return (\r\n    <div>\r\n      <h1>Todo App</h1>\r\n      {/* Render the DataForm component */}\r\n      <DataForm createTodo={createTodo} />\r\n      {/* Display the list of todos */}\r\n      <ul>\r\n        {todos.map((todo) => (\r\n          <li key={todo.Id}>{todo.Description}</li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoApp;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}