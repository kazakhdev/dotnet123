{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TEQ\\\\Desktop\\\\fullstack-dotnet-react\\\\frontend\\\\src\\\\hooks\\\\http-hook.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useHttp = () => {\n  _s();\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  const fetchData = useCallback(async () => {\n    try {\n      const response = await fetch('https://localhost:5001/todo', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const jsonData = await response.json();\n      setData(jsonData);\n      setError(null); // Clear any previous errors\n    } catch (err) {\n      setError('An error occurred while fetching the data.');\n    }\n  }, []);\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this), data && /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(useHttp, \"iXxtNX19gr77nxJMD9uWk4g7pzQ=\");\nexport default useHttp;","map":{"version":3,"names":["React","useState","useCallback","useEffect","jsxDEV","_jsxDEV","useHttp","_s","data","setData","error","setError","fetchData","response","fetch","method","headers","ok","Error","jsonData","json","err","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/TEQ/Desktop/fullstack-dotnet-react/frontend/src/hooks/http-hook.js"],"sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\n\nconst useHttp = () => {\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n\n  const fetchData = useCallback(async () => {\n    try {\n      const response = await fetch('https://localhost:5001/todo', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n\n      const jsonData = await response.json();\n      setData(jsonData);\n      setError(null); // Clear any previous errors\n    } catch (err) {\n      setError('An error occurred while fetching the data.');\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n\n  return (\n    <div>\n      {error && <p>Error: {error}</p>}\n      {data && (\n        <div>\n          {/* Render your data here */}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default useHttp;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,WAAW,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMW,SAAS,GAAGV,WAAW,CAAC,YAAY;IACxC,IAAI;MACF,MAAMW,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;QAC1DC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MAEF,IAAI,CAACH,QAAQ,CAACI,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MAEA,MAAMC,QAAQ,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;MACtCX,OAAO,CAACU,QAAQ,CAAC;MACjBR,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;IAClB,CAAC,CAAC,OAAOU,GAAG,EAAE;MACZV,QAAQ,CAAC,4CAA4C,CAAC;IACxD;EACF,CAAC,EAAE,EAAE,CAAC;EAENR,SAAS,CAAC,MAAM;IACdS,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;EAEf,oBACEP,OAAA;IAAAiB,QAAA,GACGZ,KAAK,iBAAIL,OAAA;MAAAiB,QAAA,GAAG,SAAO,EAACZ,KAAK;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC9BlB,IAAI,iBACHH,OAAA;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEK,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACnB,EAAA,CAvCID,OAAO;AAyCb,eAAeA,OAAO"},"metadata":{},"sourceType":"module"}