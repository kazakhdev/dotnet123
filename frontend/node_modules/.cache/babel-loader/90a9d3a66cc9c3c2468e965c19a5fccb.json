{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TEQ\\\\Desktop\\\\fullstack-dotnet-react\\\\frontend\\\\src\\\\hooks\\\\useHttp.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const useHttp = () => {\n  _s();\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [messages, setMessages] = useState(null);\n  const fetchData = useCallback(async (body = null) => {\n    setLoading(true);\n    try {\n      if (body) {\n        if (headers['Content-Type'] !== 'multipart/form-data; charset=utf-8; boundary=\"--WebKitBoundary\"') {\n          body = JSON.stringify(body);\n        }\n      }\n      const response = await fetch('https://localhost:5001/todo', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await response.json();\n      if (!response.ok) {\n        setMessages(data.errors);\n        throw new Error(data.message || 'Something went wrong...');\n      }\n      setLoading(false);\n      return data;\n      const jsonData = await response.json();\n      setData(jsonData);\n      setError(null); // Clear any previous errors\n    } catch (e) {\n      setLoading(false);\n      setError(e.message);\n      throw e;\n    }\n  }, []);\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this), data && /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(useHttp, \"wGZtkhTROJ53M4yKmfq4AIswhUk=\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","jsxDEV","_jsxDEV","useHttp","_s","data","setData","error","setError","loading","setLoading","messages","setMessages","fetchData","body","headers","JSON","stringify","response","fetch","method","json","ok","errors","Error","message","jsonData","e","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/TEQ/Desktop/fullstack-dotnet-react/frontend/src/hooks/useHttp.js"],"sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\n\nexport const useHttp = () => {\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false)\n  const [messages,setMessages] = useState(null)\n  const fetchData = useCallback(async (body = null,) => {\n    setLoading(true)\n    try {\n      if (body) {\n        if(headers['Content-Type'] !== 'multipart/form-data; charset=utf-8; boundary=\"--WebKitBoundary\"') {\n            body = JSON.stringify(body)\n        }\n      }\n      const response = await fetch('https://localhost:5001/todo', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n        \n      });\n      const data = await response.json()\n\n      if (!response.ok) {\n        setMessages(data.errors)\n        throw new Error(data.message || 'Something went wrong...')\n    }\n    setLoading(false)\n    return data\n      const jsonData = await response.json();\n      setData(jsonData);\n      setError(null); // Clear any previous errors\n    } catch (e) {\n      setLoading(false)\n      setError(e.message)\n      throw e\n  }}, []);\n\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n\n  return (\n    <div>\n      {error && <p>Error: {error}</p>}\n      {data && (\n        <div>\n          {/* Render your data here */}\n        </div>\n      )}\n    </div>\n  );\n};\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,WAAW,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,OAAO,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACa,QAAQ,EAACC,WAAW,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC7C,MAAMe,SAAS,GAAGd,WAAW,CAAC,OAAOe,IAAI,GAAG,IAAI,KAAM;IACpDJ,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,IAAII,IAAI,EAAE;QACR,IAAGC,OAAO,CAAC,cAAc,CAAC,KAAK,iEAAiE,EAAE;UAC9FD,IAAI,GAAGE,IAAI,CAACC,SAAS,CAACH,IAAI,CAAC;QAC/B;MACF;MACA,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;QAC1DC,MAAM,EAAE,KAAK;QACbL,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MAEF,CAAC,CAAC;MACF,MAAMV,IAAI,GAAG,MAAMa,QAAQ,CAACG,IAAI,CAAC,CAAC;MAElC,IAAI,CAACH,QAAQ,CAACI,EAAE,EAAE;QAChBV,WAAW,CAACP,IAAI,CAACkB,MAAM,CAAC;QACxB,MAAM,IAAIC,KAAK,CAACnB,IAAI,CAACoB,OAAO,IAAI,yBAAyB,CAAC;MAC9D;MACAf,UAAU,CAAC,KAAK,CAAC;MACjB,OAAOL,IAAI;MACT,MAAMqB,QAAQ,GAAG,MAAMR,QAAQ,CAACG,IAAI,CAAC,CAAC;MACtCf,OAAO,CAACoB,QAAQ,CAAC;MACjBlB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;IAClB,CAAC,CAAC,OAAOmB,CAAC,EAAE;MACVjB,UAAU,CAAC,KAAK,CAAC;MACjBF,QAAQ,CAACmB,CAAC,CAACF,OAAO,CAAC;MACnB,MAAME,CAAC;IACX;EAAC,CAAC,EAAE,EAAE,CAAC;EAEP3B,SAAS,CAAC,MAAM;IACda,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;EAEf,oBACEX,OAAA;IAAA0B,QAAA,GACGrB,KAAK,iBAAIL,OAAA;MAAA0B,QAAA,GAAG,SAAO,EAACrB,KAAK;IAAA;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC9B3B,IAAI,iBACHH,OAAA;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEK,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC5B,EAAA,CAnDWD,OAAO"},"metadata":{},"sourceType":"module"}